[{"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\index.js":"1","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\App.jsx":"2","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\index.js":"3","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\ChannelContainer.jsx":"4","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\ChannelListContainer.jsx":"5","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\ChannelSearch.jsx":"6","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\index.js":"7","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\ChannelInfo.js":"8","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\CloseCreateChannel.js":"9","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\InviteIcon.js":"10","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\SearchIcon.js":"11","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\LightningBolt.js":"12","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\AddChannel.js":"13","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\TeamChannelList.jsx":"14","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\TeamChannelPreview.jsx":"15","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\Auth.jsx":"16","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\TeamMessage.jsx":"17","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\ChannelInner.jsx":"18","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\EditChannel.jsx":"19","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\CreateChannel.jsx":"20","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\UserList.jsx":"21"},{"size":154,"mtime":1639180180697,"results":"22","hashOfConfig":"23"},{"size":1683,"mtime":1639274964307,"results":"24","hashOfConfig":"23"},{"size":658,"mtime":1639273779219,"results":"25","hashOfConfig":"23"},{"size":1427,"mtime":1639270885684,"results":"26","hashOfConfig":"23"},{"size":3430,"mtime":1639272504878,"results":"27","hashOfConfig":"23"},{"size":1232,"mtime":1639182451338,"results":"28","hashOfConfig":"23"},{"size":286,"mtime":1639173393466,"results":"29","hashOfConfig":"23"},{"size":766,"mtime":1639173332134,"results":"30","hashOfConfig":"23"},{"size":844,"mtime":1639173357415,"results":"31","hashOfConfig":"23"},{"size":1103,"mtime":1639173409545,"results":"32","hashOfConfig":"23"},{"size":479,"mtime":1639173450335,"results":"33","hashOfConfig":"23"},{"size":532,"mtime":1639173430015,"results":"34","hashOfConfig":"23"},{"size":723,"mtime":1639173304927,"results":"35","hashOfConfig":"23"},{"size":1498,"mtime":1639272069273,"results":"36","hashOfConfig":"23"},{"size":1292,"mtime":1639257628843,"results":"37","hashOfConfig":"23"},{"size":6603,"mtime":1639267569760,"results":"38","hashOfConfig":"23"},{"size":164,"mtime":1639270742427,"results":"39","hashOfConfig":"23"},{"size":3202,"mtime":1639270212647,"results":"40","hashOfConfig":"23"},{"size":169,"mtime":1639271116684,"results":"41","hashOfConfig":"23"},{"size":1233,"mtime":1639273596092,"results":"42","hashOfConfig":"23"},{"size":286,"mtime":1639273783184,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"xbdldn",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\index.js",[],["89","90"],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\App.jsx",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\index.js",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\ChannelContainer.jsx",["91"],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\ChannelListContainer.jsx",["92"],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\ChannelSearch.jsx",["93","94","95"],"import React, {useState, useEffect} from 'react';\r\nimport {useChatContent} from 'stream-chat-react';\r\n\r\nimport {SearchIcon} from '../assets';\r\n\r\n\r\n\r\n\r\nconst ChannelSearch = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [loading, setLoading] = useState('false');\r\n    \r\n    const getChannels = async (text) => {\r\n        try {\r\n            // TODO: FETCH CHANNELS\r\n        } catch (error) {\r\n            setQuery('')\r\n        }\r\n    }\r\n\r\n    const onSearch = (event) => {\r\n        event.preventDefault();\r\n\r\n        setLoading(true);\r\n        setQuery(event.target.value);\r\n        getChannels(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='channel-search__container'>\r\n            <div className='channel-search__input__wrapper'>\r\n                <div className='channel-search__input__icon'>\r\n                    <SearchIcon />\r\n                </div>\r\n                <input \r\n                    className='channel-search__input__text' \r\n                    placeholder='Search'\r\n                    type='text' \r\n                    value={query} \r\n                    onChange={onSearch}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelSearch\r\n","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\index.js",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\ChannelInfo.js",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\CloseCreateChannel.js",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\InviteIcon.js",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\SearchIcon.js",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\LightningBolt.js",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\assets\\AddChannel.js",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\TeamChannelList.jsx",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\TeamChannelPreview.jsx",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\Auth.jsx",["96"],"import React , {useState} from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\n\r\nimport signinImage from '../assets/signup.jpg';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst initialState = {\r\n    username: \"\",\r\n    fullName: \"\",\r\n    email: \"\",\r\n    avatarURL: \"\",\r\n    password: \"\",\r\n    confirmPassword:\"\",\r\n\r\n}\r\n\r\nconst Auth = () => {\r\n    const [form, setForm] = useState(initialState);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n\r\n\r\n    //takes user inputs and creates a form\r\n    const handleChange = (e) => {\r\n        setForm({...form, [e.target.name]: e.target.value})\r\n\r\n    }\r\n\r\n\r\n    //submits form then sends to backend\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const {username, fullName, password, email, avatarURL} = form;\r\n\r\n        const URL = 'http://localhost:5000/auth';\r\n\r\n        const {data: {token, userId, hashedPassword }} = await axios.post(`${URL}/${isSignup ? 'signup' : 'login'}`, {\r\n            username, password, fullName, email, avatarURL,\r\n        });\r\n        \r\n        cookies.set('token', token);\r\n        cookies.set('username', username);\r\n        cookies.set('fullName', fullName);\r\n        cookies.set('userId', userId)\r\n        \r\n        if(isSignup) {\r\n            cookies.set('email', email);\r\n            cookies.set('avatarURL', avatarURL);\r\n            cookies.set('hashedPassword', hashedPassword)   \r\n        }\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    //switches from sign up to sign in vice versa\r\n    const switchMode = () => {\r\n        setIsSignup((prevIsSignup) => !prevIsSignup);\r\n    }\r\n\r\n    return (\r\n        <div className='auth__form-container'>\r\n            <div className='auth__form-container_fields'>\r\n                <div className='auth__form-container_fields-content'>\r\n                    <p>{isSignup ? 'Sign Up' : 'Sign In'}</p>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className='auth__form-container_fields-content_input'>\r\n                            <label htmlFor='username'>Username</label>\r\n                                <input\r\n                                    name='username'\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    onChange={handleChange}\r\n                                    required />\r\n                        </div>\r\n                        {isSignup && (\r\n                            <>\r\n                                <div className='auth__form-container_fields-content_input'>\r\n                                        <label htmlFor='FullName'>Full Name</label>\r\n                                        <input\r\n                                            name='fullName'\r\n                                            type='text'\r\n                                            placeholder=''\r\n                                            onChange={handleChange}\r\n                                            required />\r\n                                </div>\r\n                            </> \r\n                            )}                        \r\n                        {isSignup && (\r\n                            <>\r\n                            <div className='auth__form-container_fields-content_input'>\r\n                                    <label htmlFor='email'>Email</label>\r\n                                    <input\r\n                                        name='email'\r\n                                        type='text'\r\n                                        placeholder=''\r\n                                        onChange={handleChange}\r\n                                        required />\r\n                            </div>\r\n                            </> \r\n                        )} \r\n\r\n                        {isSignup && (\r\n                            <>\r\n                            <div className='auth__form-container_fields-content_input'>\r\n                                    <label htmlFor='avatarURL'>Avatar URL</label>\r\n                                    <input\r\n                                        name='avatarURL'\r\n                                        type='text'\r\n                                        placeholder=''\r\n                                        onChange={handleChange}\r\n                                     />\r\n                            </div>\r\n                            </> \r\n                        )}       \r\n                        <div className='auth__form-container_fields-content_input'>\r\n                            <label htmlFor='password'>Password</label>\r\n                                <input\r\n                                    name='password'\r\n                                    type='password'\r\n                                    placeholder=''\r\n                                    onChange={handleChange}\r\n                                    required />\r\n                        </div>\r\n                        {isSignup && (\r\n                            <>\r\n                                <div className='auth__form-container_fields-content_input'>\r\n                                        <label htmlFor='confirmPassword'>Confirm Password</label>\r\n                                        <input\r\n                                            name='confirmPassword'\r\n                                            type='password'\r\n                                            placeholder=''\r\n                                            onChange={handleChange}\r\n                                            required />\r\n                                </div>\r\n                            </> \r\n                            )}\r\n                            <div className='auth__form-container_fields-content_button'>\r\n                                <button>{isSignup ? \"Sign Up\" : \"Sign In\"}</button>\r\n                            </div>\r\n                    </form>\r\n                    <div className='auth__form-container_fields-account'>\r\n                        <p>\r\n                            {isSignup\r\n                            ? \"Already have an account?\"\r\n                            : \"Don't have an account?\"\r\n                            }\r\n                            &nbsp;\r\n                            <span onClick={switchMode}> \r\n                                {isSignup ? 'Sign in' : 'Sign Up'}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\TeamMessage.jsx",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\ChannelInner.jsx",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\EditChannel.jsx",[],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\CreateChannel.jsx",["97"],"C:\\Users\\Nickiti\\Desktop\\chat-app\\client\\src\\components\\UserList.jsx",["98","99","100","101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":7,"column":13,"nodeType":"109","messageId":"110","endLine":7,"endColumn":20},{"ruleId":"107","severity":1,"message":"111","line":2,"column":23,"nodeType":"109","messageId":"110","endLine":2,"endColumn":37},{"ruleId":"107","severity":1,"message":"112","line":1,"column":26,"nodeType":"109","messageId":"110","endLine":1,"endColumn":35},{"ruleId":"107","severity":1,"message":"113","line":2,"column":9,"nodeType":"109","messageId":"110","endLine":2,"endColumn":23},{"ruleId":"107","severity":1,"message":"114","line":11,"column":12,"nodeType":"109","messageId":"110","endLine":11,"endColumn":19},{"ruleId":"107","severity":1,"message":"115","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":19},{"ruleId":"107","severity":1,"message":"111","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":24},{"ruleId":"107","severity":1,"message":"116","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":24},{"ruleId":"107","severity":1,"message":"112","line":1,"column":25,"nodeType":"109","messageId":"110","endLine":1,"endColumn":34},{"ruleId":"107","severity":1,"message":"117","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":16},{"ruleId":"107","severity":1,"message":"118","line":2,"column":18,"nodeType":"109","messageId":"110","endLine":2,"endColumn":32},{"ruleId":"107","severity":1,"message":"119","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":20},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'channel' is assigned a value but never used.","Identifier","unusedVar","'useChatContext' is defined but never used.","'useEffect' is defined but never used.","'useChatContent' is defined but never used.","'loading' is assigned a value but never used.","'signinImage' is defined but never used.","'useState' is defined but never used.","'Avatar' is defined but never used.","'useChatChannel' is defined but never used.","'InviteIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]